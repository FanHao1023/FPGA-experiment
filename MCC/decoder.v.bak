module decoder(CS, A, ~A, B, ~B);
input [2:0] CS;
output reg A, ~A, B, ~B;

always@(CS)
begin
	case(CS)
	3'd0 : begin
				A <= 1'd0;
				~A <= 1'd0;
				B <= 1'd0;
				~B <= 1'd0;
			 end
	3'd1 : begin
				A <= 1'd1;
				~A <= 1'd0;
				B <= 1'd1;
				~B <= 1'd0;
			 end
	3'd2 : begin
				A <= 1'd0;
				~A <= 1'd1;
				B <= 1'd1;
				~B <= 1'd0;
			 end
	3'd3 : begin
				A <= 1'd0;
				~A <= 1'd1;
				B <= 1'd0;
				~B <= 1'd1;
			 end
	3'd4 : begin
				A <= 1'd1;
				~A <= 1'd0;
				B <= 1'd0;
				~B <= 1'd1;
			 end
	default : begin
				A <= 1'd0;
				~A <= 1'd0;
				B <= 1'd0;
				~B <= 1'd0;
			 end
	endcase
end

endmodule
